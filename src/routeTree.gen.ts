/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as ReportsIndexImport } from './routes/reports/index'
import { Route as ExpensesIndexImport } from './routes/expenses/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as ExpensesAddExpensesIndexImport } from './routes/expenses/add-expenses/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ReportsIndexRoute = ReportsIndexImport.update({
  id: '/reports/',
  path: '/reports/',
  getParentRoute: () => rootRoute,
} as any)

const ExpensesIndexRoute = ExpensesIndexImport.update({
  id: '/expenses/',
  path: '/expenses/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any)

const ExpensesAddExpensesIndexRoute = ExpensesAddExpensesIndexImport.update({
  id: '/expenses/add-expenses/',
  path: '/expenses/add-expenses/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/expenses/': {
      id: '/expenses/'
      path: '/expenses'
      fullPath: '/expenses'
      preLoaderRoute: typeof ExpensesIndexImport
      parentRoute: typeof rootRoute
    }
    '/reports/': {
      id: '/reports/'
      path: '/reports'
      fullPath: '/reports'
      preLoaderRoute: typeof ReportsIndexImport
      parentRoute: typeof rootRoute
    }
    '/expenses/add-expenses/': {
      id: '/expenses/add-expenses/'
      path: '/expenses/add-expenses'
      fullPath: '/expenses/add-expenses'
      preLoaderRoute: typeof ExpensesAddExpensesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/expenses': typeof ExpensesIndexRoute
  '/reports': typeof ReportsIndexRoute
  '/expenses/add-expenses': typeof ExpensesAddExpensesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/expenses': typeof ExpensesIndexRoute
  '/reports': typeof ReportsIndexRoute
  '/expenses/add-expenses': typeof ExpensesAddExpensesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/expenses/': typeof ExpensesIndexRoute
  '/reports/': typeof ReportsIndexRoute
  '/expenses/add-expenses/': typeof ExpensesAddExpensesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/expenses'
    | '/reports'
    | '/expenses/add-expenses'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/dashboard' | '/expenses' | '/reports' | '/expenses/add-expenses'
  id:
    | '__root__'
    | '/'
    | '/dashboard/'
    | '/expenses/'
    | '/reports/'
    | '/expenses/add-expenses/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  ExpensesIndexRoute: typeof ExpensesIndexRoute
  ReportsIndexRoute: typeof ReportsIndexRoute
  ExpensesAddExpensesIndexRoute: typeof ExpensesAddExpensesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  ExpensesIndexRoute: ExpensesIndexRoute,
  ReportsIndexRoute: ReportsIndexRoute,
  ExpensesAddExpensesIndexRoute: ExpensesAddExpensesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard/",
        "/expenses/",
        "/reports/",
        "/expenses/add-expenses/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx"
    },
    "/expenses/": {
      "filePath": "expenses/index.tsx"
    },
    "/reports/": {
      "filePath": "reports/index.tsx"
    },
    "/expenses/add-expenses/": {
      "filePath": "expenses/add-expenses/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
